# Plans for Luminoso 2

This is an "orgmode" file. It looks vaguely like Markdown, but is designed to
have various features for keeping track of things like to-do lists. Orgmode is
available as a plugin for Emacs, Sublime Text 2 (which I use), and possibly
for vim.

* Short-term TODOs [1/12]
  - [X] change learning process to iterate multiple times
  - [ ] test PLDB associations
  - [ ] compare inputs to documents
  - [ ] compare inputs to tags
  - [ ] compare documents to documents
  - [ ] compare documents to tags
  - [ ] test ConnectMe-style PLDB tags
  - [ ] true/false tags as classifiers
  - [ ] centrality stats
  - [ ] correlation stats
  - [ ] test Japanese documents
  - [ ] package up relevant stuff on PyPI

* Design plans [0/9]
  - [ ] New "LuminosoModel" that can be incrementally trained [3/5]
    - [ ] Figure out {{rough incremental blending}}
    - [X] Look into normalization
    - [X] Test basic association
    - [X] Test tags
    - [ ] Document

  - [ ] LuminosoStudies on top of LuminosoModels [0/7]
    - [ ] Discover from filesystem
    - [ ] Look into the proper way to do correlation
    - [ ] Centrality
    - [ ] Interesting concepts (make more interesting)
    - [ ] Tag prediction (classification, as in SVM)
    - [ ] Converter from previous study
    - [ ] Document these
  
  - [ ] Configurability [0/3]
    - [ ] Change parameters after creating a study
    - [ ] Add new stopwords or autocorrections
    - [ ] Add new document handlers

  - [ ] A variety of possible data sources [2/7]
    - [X] Text files
    - [X] JSON
          PDF/Word/HTML: needs to be separate
    - [ ] SQL
    - [ ] Mongo
    - [ ] Streaming (groups documents into batches)
      - [ ] RSS/Atom feeds
      - [ ] STOMP
    - [ ] Document these

  - [ ] A variety of possible "readers" for text [2/4]
    - [X] simplenlp, English
    - [X] simplenlp, Japanese
    - [ ] Dependency parser
    - [ ] Document these
  
  - [ ] Transitional PyQt interface

  - [ ] HTML/JS interface (job for a UROP?) [0/4]
    - [ ] Some interface for choosing data sources (could be messy!)
    - [ ] Interface for configuration, including choosing a reader
    - [ ] Some way to hook in visualizations (processing.js?)
    - [ ] Document
      - [ ] Tutorial
      - [ ] Workflow

  - [ ] Clustering and labeling to discover canonicals [0/4]
    - [ ] Rafael should finish this for Luminoso 1
    - [ ] Port to Luminoso 2
    - [ ] Use SVC (or something?) to determine unknown labels
    - [ ] Document

  - [ ] Visualization [0/2]
    - [ ] New "fisheye" visualizer (Birago?)
    - [ ] different views like MDS

* redesign notes from before
  - Toggle different matrices in the blend
  - Labels: key=value or key=? pairs, representing information we may
    or may not know about the document
  - Labels and canonicals are categories projected into the space, not
    used to form the space

* rough incremental blending
  - implemented with Divisi2
  - Start with a common sense associative matrix
  - Should common sense actually disappear as the amount of information
    increases?
  - What are the learning rates?
